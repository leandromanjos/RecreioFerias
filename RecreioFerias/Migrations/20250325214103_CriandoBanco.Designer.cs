// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecreioFerias.Data;

#nullable disable

namespace RecreioFerias.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325214103_CriandoBanco")]
    partial class CriandoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecreioFerias.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlunoId"));

                    b.Property<string>("AgrupamentoTurmaAno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CertidaoNascimento")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvenioMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataExpedicaoRG")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deficiencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocResponsavel1")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("DocResponsavel2")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("DocResponsavel3")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("DocResponsavel4")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("EOL")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Escola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeResponsavel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavelSocial1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OpcaoConvenioMedico")
                        .HasColumnType("bit");

                    b.Property<bool>("OpcaoDeficiencia")
                        .HasColumnType("bit");

                    b.Property<bool>("OpcaoMedicamento")
                        .HasColumnType("bit");

                    b.Property<bool>("OpcaoProblemaSaude")
                        .HasColumnType("bit");

                    b.Property<bool>("OpcaoRestricaoAlimentar")
                        .HasColumnType("bit");

                    b.Property<bool>("OpcaoRestricaoMedicamento")
                        .HasColumnType("bit");

                    b.Property<bool>("Piscina")
                        .HasColumnType("bit");

                    b.Property<string>("ProblemaSaude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("RedeMunicipal")
                        .HasColumnType("bit");

                    b.Property<string>("RestricaoAlimentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestricaoMedicamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("TelefoneResponsavel1")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TelefoneResponsavel1Outro")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TelefoneResponsavel2")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TelefoneResponsavel3")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TelefoneResponsavel4")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<bool>("VoltaSozinho")
                        .HasColumnType("bit");

                    b.HasKey("AlunoId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("RecreioFerias.Models.CorTurma", b =>
                {
                    b.Property<int>("CorTurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CorTurmaId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CorTurmaId");

                    b.ToTable("CorTurma");

                    b.HasData(
                        new
                        {
                            CorTurmaId = 1,
                            Descricao = "Verde"
                        },
                        new
                        {
                            CorTurmaId = 2,
                            Descricao = "Azul"
                        },
                        new
                        {
                            CorTurmaId = 3,
                            Descricao = "Roxo"
                        },
                        new
                        {
                            CorTurmaId = 4,
                            Descricao = "Laranja"
                        },
                        new
                        {
                            CorTurmaId = 5,
                            Descricao = "Amarelo"
                        });
                });

            modelBuilder.Entity("RecreioFerias.Models.Frequencia", b =>
                {
                    b.Property<int>("FrequenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrequenciaID"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("DiaDaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presente")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("FrequenciaID");

                    b.HasIndex("AlunoId");

                    b.ToTable("Frequencia");
                });

            modelBuilder.Entity("RecreioFerias.Models.Matricula", b =>
                {
                    b.Property<int>("MatriculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatriculaId"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("MatriculaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("RecreioFerias.Models.Operador", b =>
                {
                    b.Property<int>("OperadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperadorId"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.HasKey("OperadorId");

                    b.ToTable("Operador");
                });

            modelBuilder.Entity("RecreioFerias.Models.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurmaId"));

                    b.Property<int>("CorTurmaId")
                        .HasColumnType("int");

                    b.Property<int>("IdadeMaxima")
                        .HasColumnType("int");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeAlunos")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.HasKey("TurmaId");

                    b.HasIndex("CorTurmaId");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("RecreioFerias.Models.Frequencia", b =>
                {
                    b.HasOne("RecreioFerias.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("RecreioFerias.Models.Matricula", b =>
                {
                    b.HasOne("RecreioFerias.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecreioFerias.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("RecreioFerias.Models.Turma", b =>
                {
                    b.HasOne("RecreioFerias.Models.CorTurma", "CorTurma")
                        .WithMany()
                        .HasForeignKey("CorTurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorTurma");
                });
#pragma warning restore 612, 618
        }
    }
}
